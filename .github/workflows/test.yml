name: Test

on:
  workflow_call:

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare backend env
        run: |
          cp backend/.env.example backend/.env
          cat <<'EOF' >> backend/.env
          SECRET_KEY=${{ secrets.BACKEND_SECRET_KEY }}
          OAUTH_CLIENT_ID=${{ secrets.BACKEND_OAUTH_CLIENT_ID }}
          OAUTH_CLIENT_SECRET=${{ secrets.BACKEND_OAUTH_CLIENT_SECRET }}
          EOF

      - name: Prepare frontend env
        run: cp frontend/.env.example frontend/.env

      - name: Prepare docker env
        run: cp docker/.env.example docker/.env

      - name: Start core services
        run: docker compose -f docker/docker-compose.dev.yml up -d db redis minio

      - name: Run migrations
        run: docker compose -f docker/docker-compose.dev.yml run --rm backend uv run alembic upgrade head

      - name: Seed database
        run: docker compose -f docker/docker-compose.dev.yml run --rm backend uv run python app/scripts/seed_db.py

      - name: Run backend tests with coverage
        run: |
          docker compose -f docker/docker-compose.dev.yml run --rm backend \
            uv run pytest --cov=app --cov-report=term-missing --cov-report=html

      - name: Upload backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/htmlcov
          if-no-files-found: warn

      - name: Tear down
        if: always()
        run: docker compose -f docker/docker-compose.dev.yml down --volumes --remove-orphans

  frontend-unit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      - name: Run frontend unit tests with coverage
        working-directory: ./frontend
        run: pnpm test:coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

  frontend-e2e:
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile

      # - name: Run frontend E2E tests
      #   working-directory: ./frontend
      #   run: pnpm test:e2e

      - name: Placeholder frontend E2E tests
        run: echo "Frontend E2E tests are not configured yet."
